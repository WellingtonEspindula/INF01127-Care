/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.ui;

import app.AlreadyHaveMonitorAttachedException;
import app.ObserverManager;
import app.connector.BloodPressureConnector;
import app.observers.BloodPressureObserverImpl;
import blood_pressure.BloodPressureConfig;
import blood_pressure.BloodPressureMonitor;
import blood_pressure.BloodPressureState;
import data_center.entities.Patient;

import javax.swing.*;

/**
 * @author wmespindula
 */
public class BloodPressureRegisterUI extends LinkedDisposableJFrame {
    private final Patient patient;
    private final BloodPressureMonitor bloodPressureMonitor;

    /**
     * Creates new form BloodPressureRegister
     */
    public BloodPressureRegisterUI(DisposableJFrame previousJFrame, Patient patient, BloodPressureMonitor bloodPressureMonitor) {
        super(previousJFrame);
        this.patient = patient;
        this.bloodPressureMonitor = bloodPressureMonitor;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        minDiastolicTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxDiastolicTextField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        minSystolicTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        maxSystolicTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Defina os limites de Pressão Cardíaca");

        jLabel2.setText("Diástole Mínima:");

        jLabel3.setText("Diástole Máxima:");

        registerButton.setText("Registrar");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Sístole Mínima:");

        jLabel5.setText("Sístole Máxima:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minDiastolicTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(registerButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxDiastolicTextField)
                            .addComponent(minSystolicTextField)
                            .addComponent(maxSystolicTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(minDiastolicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(maxDiastolicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(minSystolicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(maxSystolicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(registerButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        BloodPressureConfig bloodPressureConfig = getBloodPressureConfigFromForm();
        BloodPressureObserverImpl bloodPressureObserver = new BloodPressureObserverImpl(patient.getPatientId());
        ObserverManager observerManager = ObserverManager.getInstance();

        if (bloodPressureConfig != null) {
            try {
                observerManager.add(bloodPressureObserver);

                BloodPressureConnector connector = BloodPressureConnector.getInstance();
                connector.attachPatientToMonitor(patient, bloodPressureMonitor.getCode(),
                        bloodPressureObserver, bloodPressureConfig);

                JOptionPane.showMessageDialog(this, "Monitor configurado ao paciente com sucesso!",
                        "Configurado!", JOptionPane.INFORMATION_MESSAGE);

            } catch (AlreadyHaveMonitorAttachedException e) {
                JOptionPane.showMessageDialog(this, "Sensor de Pressão Arterial já está registrado ao paciente!");
                e.printStackTrace();
            }
            this.dispose();
        }

    }//GEN-LAST:event_registerButtonActionPerformed

    private BloodPressureConfig getBloodPressureConfigFromForm() {
        String systolicMinString = minSystolicTextField.getText();
        String systolicMaxString = maxSystolicTextField.getText();
        String diastolicMinString = minDiastolicTextField.getText();
        String diastolicMaxString = maxDiastolicTextField.getText();

        try {
            Integer systolicMin = Integer.parseInt(systolicMinString);
            Integer systolicMax = Integer.parseInt(systolicMaxString);
            Integer diastolicMin = Integer.parseInt(diastolicMinString);
            Integer diastolicMax = Integer.parseInt(diastolicMaxString);

            BloodPressureConfig config = new BloodPressureConfig();

            BloodPressureState minState = new BloodPressureState();
            minState.setDiastolic(diastolicMin);
            minState.setSystolic(systolicMin);

            BloodPressureState maxState = new BloodPressureState();
            maxState.setDiastolic(diastolicMax);
            maxState.setSystolic(systolicMax);

            config.setMinState(minState);
            config.setMaxState(maxState);

            return config;

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Os campos devem conter números inteiros positivos!",
                        "Erro no preenchimento do formulário", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        return null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField maxDiastolicTextField;
    private javax.swing.JTextField maxSystolicTextField;
    private javax.swing.JTextField minDiastolicTextField;
    private javax.swing.JTextField minSystolicTextField;
    private javax.swing.JButton registerButton;
    // End of variables declaration//GEN-END:variables
}
